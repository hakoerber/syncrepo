#!/usr/bin/env python3

import os
import sys
import argparse
import json
import subprocess

baseargs = [
    "rsync",
    "--hard-links",
    "--stats",
    "--recursive",
    "--update",
    "--delete",
    "--delete-after",
    "--delay-updates"
]

parser = argparse.ArgumentParser(add_help=False)
parser.add_argument('--config', dest='config', required=True)

args = parser.parse_args()
print(args.config)

with open(args.config) as config:
    data = json.load(config)

fail = 0

for path, mirror in sorted(data["repos"].items()):
    target = "{base}/{path}".format(base=data["base"], path=path)
    if not os.path.exists(target):
        os.makedirs(target, 0o755)

    # like --itemize-changes, but with timestamp
    format = "[{mirror}] {path}: %t %i %n%L".format(mirror=mirror, path=path)

    args = (baseargs +
            ["--out-format", format] +
            ["rsync://{mirror}/{path}/".format(mirror=mirror, path=path)] +
            [target])
    print(" ".join(args))
    result = subprocess.call(args)
    if result != 0:
        fail = 1

sys.exit(fail)
